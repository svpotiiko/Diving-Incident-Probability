"""Input/Output utilities for loading data, config, and saving results."""import osimport yamlimport pandas as pdfrom pathlib import Pathfrom typing import Dict, Anydef load_config(config_path: str = "config/settings.yaml") -> Dict[str, Any]:    """Load configuration from YAML file.        Args:        config_path: Path to config YAML file            Returns:        Dictionary containing configuration    """    with open(config_path, 'r') as f:        config = yaml.safe_load(f)    return configdef load_data(config: Dict[str, Any]) -> pd.DataFrame:    """Load diving data CSV.        Args:        config: Configuration dictionary            Returns:        DataFrame with diving data    """    data_path = os.path.join(config['paths']['data_dir'],                              config['paths']['input_csv'])    df = pd.read_csv(data_path)    return dfdef ensure_output_dir(config: Dict[str, Any]) -> None:    """Create output directory if it doesn't exist.        Args:        config: Configuration dictionary    """    output_dir = config['paths']['output_dir']    Path(output_dir).mkdir(parents=True, exist_ok=True)def get_output_path(config: Dict[str, Any], file_key: str) -> str:    """Get full output path for a file.        Args:        config: Configuration dictionary        file_key: Key from output_files config section            Returns:        Full path to output file    """    return os.path.join(config['paths']['output_dir'],                       config['output_files'][file_key])def save_dataframe(df: pd.DataFrame, config: Dict[str, Any],                    file_key: str) -> str:    """Save DataFrame to CSV in output directory.        Args:        df: DataFrame to save        config: Configuration dictionary        file_key: Key from output_files config section            Returns:        Path where file was saved    """    path = get_output_path(config, file_key)    df.to_csv(path, index=False)    return pathdef save_figure(fig, config: Dict[str, Any], file_key: str) -> str:    """Save matplotlib figure to output directory.        Args:        fig: Matplotlib figure object        config: Configuration dictionary        file_key: Key from output_files config section            Returns:        Path where figure was saved    """    path = get_output_path(config, file_key)    dpi = config['plotting']['dpi']    fig.savefig(path, dpi=dpi, bbox_inches='tight')    return pathdef save_html_report(html_content: str, config: Dict[str, Any]) -> str:    """Save HTML report to output directory.        Args:        html_content: HTML string content        config: Configuration dictionary            Returns:        Path where report was saved    """    path = get_output_path(config, 'html_report')    with open(path, 'w', encoding='utf-8') as f:        f.write(html_content)    return path